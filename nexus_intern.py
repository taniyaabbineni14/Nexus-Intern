# -*- coding: utf-8 -*-
"""Nexus Intern

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UpfXcpQeysfOuU65RsY2Gf5cr6yQbqBe

#Task 1
"""

import tensorflow

from keras.preprocessing.image import ImageDataGenerator
from keras.models import Sequential
from keras.layers import Dense, Flatten
from keras.layers import Conv2D, MaxPool2D
from tensorflow.keras import layers
from keras.layers import Dropout
from keras.models import load_model
import numpy as np

!pip install openpyxl
import pandas as pd

# Load Excel file
df = pd.read_excel("/content/weather.xlsx")

selected_colums = ['MinTemp', 'MaxTemp', 'Rainfall', 'Evaporation']
selected_data = df[selected_colums]

#Compute basic statistics
statistics = selected_data.describe().loc[['mean','50%','std']].rename(index={'50%': 'median'})

# Display the statistics
print("Basic Statistics for MinTemp, MaxTemp, Rainfall and Evaporaion:")
print(statistics)

df.columns

df.rename(columns={'Date': 'Dates'}, inplace=True)
df.insert(0, 'Dates', pd.date_range('2010-01-01', periods=361))

# Time Series Visualization
df.set_index('Dates', inplace=True)
df[['MinTemp', 'MaxTemp', 'Rainfall']].plot(figsize=(10, 6))
plt.title('Weather Variables Over Time')
plt.xlabel('Dates')
plt.ylabel('Values')
plt.show()

import seaborn as sns
selected_colums = ['MinTemp', 'MaxTemp', 'Rainfall', 'Evaporation']
selected_data = df[selected_colums]

# calculate the correlation matrix
correlation_matrix = selected_data.corr()

# Create a heatmap
plt.figure(figsize=(10,8))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f", linewidth=.5)
plt.title('correlation Heatmap - MinTemp, Maxtemp, Rainfall, Evaporation')
plt.show()

# Rainfall Distribution
plt.figure(figsize=(10, 6))
plt.hist(df["Rainfall"], bins=20, color='skyblue', edgecolor='black')
plt.title('Rainfall Distribution - Histogram')
plt.xlabel('Rainfall (mm)')
plt.ylabel('Frequency')
plt.grid(axis='y', linestyle='-', alpha=0.7)
plt.show()

#Seasonal Analysis
# Assuming you have a 'Season' column
# You may need to create this column based on the date in your dataset
seasonal_avg = df.groupby(df.index.month)[['MinTemp', 'MaxTemp', 'Rainfall', 'Evaporation']].mean()
seasonal_avg.plot(kind='bar', figsize=(10, 6))
plt.title('Average Values Across Different Seasons')
plt.xlabel('Month')
plt.ylabel('Average Value')
plt.show()

